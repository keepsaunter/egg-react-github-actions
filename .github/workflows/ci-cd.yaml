on: push
jobs:
  getShortSha:
    runs-on: ubuntu-latest
    outputs:
      shortSha: ${{ steps.get_short_sha.outputs.shortSha }}
    steps:
      - id: get_short_sha
        run: |
          commitSha="${{github.sha}}"
          echo "::set-output name=shortSha::${commitSha:0:6}"
  # install-prod:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/cache@v3
  #       name: cache-prod-modules
  #       with:
  #         path: node_modules
  #         key: ${{ runner.os }}-${{ github.ref_name }}-prod
  #     - if: ${{ steps.cache-prod-modules.outputs.cache-hit != 'true' }}
  #       run: npm install --omit=dev
  install:
    runs-on: ubuntu-latest
    needs: getShortSha
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/cache@v3
        name: cache-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ needs.getShortSha.outputs.shortSha }}-${{ github.ref_name }}-modules
      - if: ${{ steps.cache-prod-modules.outputs.cache-hit != 'true' }}
        run: npm install
  build:
    runs-on: ubuntu-latest
    needs:
      - install
      - getShortSha
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        name: cache-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ needs.getShortSha.outputs.shortSha }}-${{ github.ref_name }}
      - run: npm run build
      - uses: actions/upload-artifact@v3
        with:
          name: build-dist
          path: dist
          if-no-files-found: error
  image:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      # - uses: actions/setup-node@v3
      #   with:
      #     node-version: 16
      # - run: npm install --omit=dev
      - uses: actions/download-artifact@v3
        with:
          name: build-dist
          path: dist
      - uses: docker/login-action@v1
        with: 
          username: ${{secrets.DOCKER_HUB_USERNAME}}
          password: ${{secrets.DOCKER_HUB_PASSWD}}
      - id: getDateTime
        name: get-date-str
        run: echo "::set-output name=dateStr::$(TZ=UTC-8 date +'%Y%m%d%H%M%S')"
      - run: zip -r app-code.zip .
      - id: docker_build
        name: build-image
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./build/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{github.event.repository.name}}:${{steps.getDateTime.outputs.dateStr}}
      - run: echo ${{ steps.docker_build.outputs.digest }}